buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3'
        if(project.hasProperty("coverage")) {
            classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:1.0.2'
        }
    }
}

apply plugin: 'bintray'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'com.ofg'
description = 'Core of UpToDate plugin'
version = '0.0.7-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'

    testCompile 'junit:junit:4.11'
    testCompile 'org.spockframework:spock-core:0.7-groovy-1.8'
    testCompile 'com.github.tomakehurst:wiremock:1.47'
    testRuntime 'cglib:cglib-nodep:2.2.2'
    testRuntime 'org.objenesis:objenesis:1.2'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

bintrayUpload.dependsOn 'build'

publishing {
    publications {
        plugin(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }
        }
    }
}

bintray {
    user = System.properties['bintrayUser']
    key = System.properties['bintrayKey']
    publications = ['plugin']
    pkg {
        repo = 'uptodate-gradle-plugin'
        userOrg = '4finance' 
        name = 'uptodate-gradle-plugin'
        desc = 'Gradle plugin that tells you what libs have new versions on Maven Central'
        licenses = ['Apache-2.0']
        labels = ['gradle']
    } 
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

if(project.hasProperty("coverage")) {
    apply plugin: 'codenarc'
    apply plugin: 'jacoco'
    apply plugin: 'sonar-runner'
    apply plugin: 'com.github.kt3k.coveralls'

    jacoco {
        toolVersion = "0.7.0.201403182114"
    }

    jacocoTestReport {
        reports {
            xml.enabled = true // coveralls plugin depends on xml format report
            html.enabled = true
        }
    }

    codenarc {
        configFile = file('config/codenarc/rules.groovy')
        maxPriority1Violations = 0
        maxPriority2Violations = 6
        maxPriority3Violations = 10
        reportFormat = 'xml'
        ignoreFailures = true
    }

    dependencies {
        codenarc 'org.codenarc:CodeNarc:0.21'
    }

    test {
        ignoreFailures = true
        jacoco {
            excludes = ['*Configuration']
        }
    }

    sonarRunner {
        sonarProperties {
            //TODO: fill this
            property "sonar.host.url", ""
            property "sonar.junit.reportsPath", "build/test-results"
        }
    }

}

